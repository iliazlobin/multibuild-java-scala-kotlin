buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url = "https://repo.spring.io/plugins-release" }
        maven { url = "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("gradle.plugin.com.dorongold.plugins:task-tree:1.3")
    }
}

apply {
    plugin("com.dorongold.task-tree")
    plugin("scala")
}

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

dependencies {
    // logging
    compile("ch.qos.logback:logback-classic:1.2.3")

    // scala
    compile "org.scala-lang:scala-library:2.12.2"

    // test
    testCompile("org.mockito:mockito-core:2.+")
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 0, 'seconds'
        cacheChangingModulesFor 0, 'seconds'
    }
}

compileJava {
    options.compilerArgs += ["-Xlint:unchecked"]
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = [
        "-deprecation",
        "-encoding", "UTF-8",
        "-feature",
        "-unchecked",
//            "-Ywarn-adapted-args",
        "-Ywarn-dead-code",
        "-Ywarn-value-discard",
//            "-Ylog-classpath",
    ]
}

sourceSets {
//    main.java.srcDirs += main.scala.srcDirs
//    main.scala.srcDirs += main.java.srcDirs //not working
}

sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []

classes.dependsOn = classes.taskDependencies.values - "compileScala"
compileScala.dependsOn = compileScala.taskDependencies.values - "compileJava"
compileJava.dependsOn compileScala

taskTree {
    noRepeat = true
    impliesSubProjects = true
}

task viewSS << {
    sourceSets {
        main {
            println "java.srcDirs = ${java.srcDirs}"
            println "scala.srcDirs = ${scala.srcDirs}"
        }
    }
}

task viewAllSS << {
    sourceSets {
        main {
            println "java.srcDirs = ${java.srcDirs}"
            println "java.files = ${java.files.name}"
            println "scala.srcDirs = ${scala.srcDirs}"
            println "scala.files = ${scala.files.name}"
            println "resources.srcDirs = ${resources.srcDirs}"
            println "allJava.files = ${allJava.files.name}"
            println "allScala.files = ${allScala.files.name}"
            println "resources.files = ${resources.files.name}"
            println "allSource.files = ${allSource.files.name}"
            println "output.classesDir = ${output.classesDir}"
            println "output.resourcesDir = ${output.resourcesDir}"
            println "output.files = ${output.files}"
        }
    }
}
